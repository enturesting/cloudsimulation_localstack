name: Terraform CI & Terratest (Bash Compatible)

on:
  push:
    branches:
      - main
      - develop
      - feature/mvp
  pull_request:

jobs:
  deploy:
    name: "${{ matrix.env }} Terraform + Terratest"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - env: feature
            branch: feature/mvp
            tfvars: develop.tfvars
            ami_env: develop
          - env: develop
            branch: develop
            tfvars: develop.tfvars
            ami_env: develop
          - env: dev
            branch: main
            tfvars: develop.tfvars
            ami_env: develop
          - env: nonprod
            branch: main
            tfvars: nonprod.tfvars
            ami_env: nonprod

    if: startsWith(github.ref, 'refs/heads/') && github.ref == format('refs/heads/{0}', matrix.branch)

    environment: ${{ matrix.env }}

    env:
      LOCALSTACK_AUTH_TOKEN: ${{ secrets.LOCALSTACK_AUTH_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Format Check
        working-directory: ./environments
        run: terraform fmt -check -recursive

      - name: Terraform Init (${{ matrix.env }})
        working-directory: ./environments
        run: terraform init

      - name: Terraform Validate (${{ matrix.env }})
        working-directory: ./environments
        run: terraform validate -var-file=${{ matrix.tfvars }}

      - name: Register Mock AMI
        working-directory: ./scripts
        run: pwsh ./register_mock_ami.ps1 -Env ${{ matrix.ami_env }}

      - name: Run Terratest (Go)
        run: go test ./test/... -v
